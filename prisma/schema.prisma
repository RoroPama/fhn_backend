// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Enfant {
  id               String   @id @default(uuid())
  nom              String
  date_naissance   DateTime
  sexe             String
  commune          String
  statut_dossier   Statut
  diagnostic       String?
  dossier         Dossier[]
  parentNom        String
  parentTelephone  String
  parentEmail      String

  est_scolarise           Boolean
  niveau_scolaire         String?
  ancien_etablissement    String?
  activites_quotidiennes  String?

  date_creation    DateTime @default(now())
  utilisateurId    String
  utilisateur      User @relation(fields: [utilisateurId], references: [id])
}

model ParcoursMedicalWiSi {
  id String @id @default(uuid())
  a_consulte_ophtalmo     Boolean
  a_autre_suivi_medical   Boolean
  details_suivi_medical   String?
  a_perception_visuelle   Boolean
  est_aveugle             Boolean
  attente                 String
  observation             String
}

model ParcoursMedicalTARII {
  id String @id @default(uuid())
  suivi_orthophonique     Boolean
  suivi_psychologique     Boolean
  psychomotricien        Boolean
  tradipracticien        Boolean
  attente                 String
  observation             String
}



model Nature {
  id String @id @default(uuid())
  nom String
  etablissementId String
  etablissement Etablissement @relation(fields: [etablissementId], references: [id])
  Document    Document[]
}

model Etablissement {
  id        String   @id @default(uuid())
  libelle   String  @unique
  dossier   Dossier[]
  nature    Nature[]
  
}

model Dossier {
  id        String   @id @default(uuid())
  enfantId  String
  enfant    Enfant   @relation(fields: [enfantId], references: [id])
  documents        Document[]
  observations     Observation[]
  etablissementId String
  etablissement    Etablissement @relation(fields: [etablissementId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  nom       String
  email     String   @unique
  mot_de_passe_hash String
  role      Role
  enfants   Enfant[]
  observations Observation[]
}

model Document {
  id        String   @id @default(uuid())
  dossierId String
  dossier   Dossier  @relation(fields: [dossierId], references: [id])
  natureId String
  nature  Nature  @relation(fields: [natureId], references: [id])
  nomFichier String
  url       String
}

model Observation {
  id        String   @id @default(uuid())
  dossierId String
  dossier   Dossier  @relation(fields: [dossierId], references: [id])
  contenu   String
  auteurId String
  auteur    User     @relation(fields: [auteurId], references: [id])    
  date      DateTime @default(now())
}

enum Role {
  parent
  secretaire
  analyste
  admin
}

enum Statut {
  Nouveau
  En_cours
  Incomplet
  Accepte
  Rejete
  Cloture
}